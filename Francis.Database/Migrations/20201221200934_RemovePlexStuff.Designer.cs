// <auto-generated />
using System;
using Francis.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Francis.Database.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20201221200934_RemovePlexStuff")]
    partial class RemovePlexStuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Francis.Database.Entities.BotUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("TelegramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BotUsers");
                });

            modelBuilder.Entity("Francis.Database.Entities.OptionValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Francis.Database.Entities.Progression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BotUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BotUserId1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BotUserId1");

                    b.ToTable("Progressions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Progression");
                });

            modelBuilder.Entity("Francis.Database.Entities.WatchedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BotUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BotUserId");

                    b.ToTable("WatchedItems");
                });

            modelBuilder.Entity("Francis.Database.Entities.RequestProgression", b =>
                {
                    b.HasBaseType("Francis.Database.Entities.Progression");

                    b.Property<string>("ExcludedIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("Search")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("RequestProgression");
                });

            modelBuilder.Entity("Francis.Database.Entities.Progression", b =>
                {
                    b.HasOne("Francis.Database.Entities.BotUser", "BotUser")
                        .WithMany("Progressions")
                        .HasForeignKey("BotUserId1");

                    b.Navigation("BotUser");
                });

            modelBuilder.Entity("Francis.Database.Entities.WatchedItem", b =>
                {
                    b.HasOne("Francis.Database.Entities.BotUser", "BotUser")
                        .WithMany("WatchedItems")
                        .HasForeignKey("BotUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BotUser");
                });

            modelBuilder.Entity("Francis.Database.Entities.BotUser", b =>
                {
                    b.Navigation("Progressions");

                    b.Navigation("WatchedItems");
                });
#pragma warning restore 612, 618
        }
    }
}
