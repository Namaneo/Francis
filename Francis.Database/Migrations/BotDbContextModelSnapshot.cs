// <auto-generated />
using System;
using Francis.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Francis.Database.Migrations
{
    [DbContext(typeof(BotDbContext))]
    partial class BotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Francis.Database.Entities.BotUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OmbiId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlexToken")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RequestProgressionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Francis.Database.Entities.OptionValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Francis.Database.Entities.Progression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BotUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BotUserId");

                    b.ToTable("Progressions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Progression");
                });

            modelBuilder.Entity("Francis.Database.Entities.WatchedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RequestId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WatchedItems");
                });

            modelBuilder.Entity("Francis.Database.Entities.RequestProgression", b =>
                {
                    b.HasBaseType("Francis.Database.Entities.Progression");

                    b.Property<string>("ExcludedIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("Search")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("RequestProgression");
                });

            modelBuilder.Entity("Francis.Database.Entities.Progression", b =>
                {
                    b.HasOne("Francis.Database.Entities.BotUser", null)
                        .WithMany("Progressions")
                        .HasForeignKey("BotUserId");
                });

            modelBuilder.Entity("Francis.Database.Entities.WatchedItem", b =>
                {
                    b.HasOne("Francis.Database.Entities.BotUser", "User")
                        .WithMany("WatchedItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
